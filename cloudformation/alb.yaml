Description: >
    This template deploys an Application Load Balancer that exposes our various services.
    We create them in a seperate nested template, so it can be referenced by all of the other nested templates.

Parameters:

    EnvironmentName:
        Description: An environment name that will be prefixed to resource names
        Type: String

    VPC:
        Type: AWS::EC2::VPC::Id
        Description: Choose which VPC the Applicaion Load Balancer should be deployed to

    Subnets:
        Description: Choose which subnets the Applicaion Load Balancer should be deployed to
        Type: List<AWS::EC2::Subnet::Id>

    SecurityGroup:
        Description: Select the Security Group to apply to the Applicaion Load Balancer
        Type: AWS::EC2::SecurityGroup::Id

    TargetInstance1:
        Description: Select the Instances to apply to the Applicaion Load Balancer
        Type: AWS::EC2::Instance::Id

    TargetInstance2:
        Description: Select the second Instances to apply to the Applicaion Load Balancer
        Type: AWS::EC2::Instance::Id

    SSLCertificate:
        Description: SSLCertificate to apply to the Applicaion Load Balancer
        Type: String
        AllowedValues:
           - arn:aws:acm:ap-southeast-2:130216941401:certificate/59270c68-f78b-40af-a371-e44eb2e4b65d
    InstanceTargetName:
        Description: Name for the Instance Targets
        Type: String

Resources:

    LoadBalancer:
        Type: AWS::ElasticLoadBalancingV2::LoadBalancer
        Properties:
            Name: !Ref EnvironmentName
            Subnets: !Ref Subnets
            SecurityGroups:
                - !Ref SecurityGroup
            Tags:
                - Key: Name
                  Value: !Ref EnvironmentName
    LoadBalancerListener:
        Type: AWS::ElasticLoadBalancingV2::Listener
        Properties:
            LoadBalancerArn: !Ref LoadBalancer
            Port: 443
            Protocol: HTTPS
            Certificates:
              - CertificateArn: !Ref SSLCertificate
            DefaultActions:
                - Type: forward
                  TargetGroupArn: !Ref InstanceTargetGroup

    # We define a default target group here, as this is a mandatory Parameters
    # when creating an Application Load Balancer Listener. This is not used, instead
    # a target group is created per-service in each service template (../services/*)
    InstanceTargetGroup:
        Type: AWS::ElasticLoadBalancingV2::TargetGroup
        Properties:
            Name: !Ref InstanceTargetName
            VpcId: !Ref VPC
            Port: 80
            Protocol: HTTP
            HealthCheckIntervalSeconds: 30
            HealthCheckProtocol: HTTP
            HealthCheckTimeoutSeconds: 10
            HealthyThresholdCount: 4
            Matcher:
              HttpCode: '200'
            TargetGroupAttributes:
            - Key: deregistration_delay.timeout_seconds
              Value: '20'
            Targets:
            - Id:
                Ref: TargetInstance1
              Port: 80
            - Id:
                Ref: TargetInstance2
              Port: 80
            UnhealthyThresholdCount: 3

Outputs:

    LoadBalancer:
        Description: A reference to the Application Load Balancer
        Value: !Ref LoadBalancer

    LoadBalancerUrl:
        Description: The URL of the ALB
        Value: !GetAtt LoadBalancer.DNSName

    Listener:
        Description: A reference to a port 80 listener
        Value: !Ref LoadBalancerListener
